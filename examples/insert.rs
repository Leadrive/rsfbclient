//!
//! Rust Firebird Client
//!
//! Example of insert
//!
//! You need create a database with this table:
//! create table test (col_a int generated by default as identity, col_b float, col_c varchar(10));
//!

use rsfbclient::Connection;

const SQL_INSERT: &str = "insert into test (col_b, col_c) values (rand(), 'test')";

fn main() {
    let conn = Connection::open("localhost", 3050, "examples.fdb", "SYSDBA", "masterkey")
        .expect("Error on connect");

    let tr = conn.transaction().expect("Error on start the transaction");

    // First alternative
    {
        tr.execute_immediate(SQL_INSERT).expect("Error on insert");
    }

    // Second alternative
    {
        let mut stmt = tr.prepare(SQL_INSERT).expect("Error on prepare the insert");

        stmt.execute_simple()
            .expect("Error on execute the prepared insert");
        stmt.execute_simple()
            .expect("Error on execute the prepared insert");
    }

    tr.commit().expect("Error on commit the transaction");

    conn.close().expect("Error on close the connection");
}
